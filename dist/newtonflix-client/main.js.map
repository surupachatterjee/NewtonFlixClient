{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/movie/movie.component.css","webpack:///./src/app/components/movie/movie.component.html","webpack:///./src/app/components/movie/movie.component.ts","webpack:///./src/app/services/movie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n <app-movie></app-movie>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'newtonflix-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms'\nimport { HttpClientModule}  from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MovieComponent } from './components/movie/movie.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW92aWUvbW92aWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\">\\n    <h1>Newton Flix</h1>\\n  </a>\\n  <form class=\\\"form-inline\\\" >\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"newton\\\" aria-label=\\\"Search\\\" [(ngModel)]=\\\"searchMovie\\\" name=\\\"searchMovie\\\" [readonly]=\\\"showAlert\\\" >\\n    <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\" (click)=\\\"search()\\\">Search</button>\\n  </form>\\n</nav>\\n\\n<span *ngIf=\\\"showAlert\\\">\\n  <div class=\\\"alert alert-danger alert-dismissible fade show\\\" role=\\\"alert\\\">\\n    <strong>Sorry!</strong> {{errMessage}}\\n    Please close to try a new search\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\" (click)=\\\"dismissAlert()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n</span>\\n<table class=\\\"table table-striped table-light table-hover \\\" *ngIf=\\\"!showAlert\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Title</th>\\n      <th scope=\\\"col\\\">Year</th>\\n      <th scope=\\\"col\\\">IMDB</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let movie of movies\\\">\\n      <td>{{movie.Title}}</td>\\n      <td>{{movie.Year}}</td>\\n      <td><a href=\\\"{{movie.imDBLink}}\\\">{{movie.imDBLink}}</a></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../../models/Movie';\nimport { MovieService }  from '../../services/movie.service';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n  searchMovie: string = 'newton';\n  errMessage: string;\n  movies: Movie[];\n  moviesFound: Movie[];\n  showAlert = false;\n\n  constructor(private movieService: MovieService) { }\n\n  ngOnInit() {\n      this.movieService.getMovies('newton').subscribe(moviesFound => {\n        this.moviesFound = moviesFound;\n        this.movies = moviesFound;\n      })\n  }\n\n  search() {\n    console.log(this.searchMovie);\n    if (this.searchMovie !== '' && this.searchMovie !== 'newton') {\n      this.movieService.getMovies(this.searchMovie)\n      .subscribe(moviesFound => {\n        console.log(moviesFound);\n        this.movies = moviesFound;\n      },\n      (err) => {\n        // alert(err.error);\n        this.showAlert = true;\n        this.errMessage = err.error;\n        \n      }\n      )\n    }\n    else if (this.searchMovie === ''){\n      this.movies = this.moviesFound;\n    }\n  }\n\n  dismissAlert() {\n    this.showAlert = false;\n    this.searchMovie = '';\n    this.movies = this.moviesFound;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Movie} from '../models/Movie';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  baseURL = environment.baseURL;\n  constructor(private httpClient: HttpClient) { }\n\n  getMovies(query): Observable<Movie[]> {\n    let url = `${this.baseURL}/movie/${query}`;\n    return this.httpClient.get<Movie[]>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  baseURL: 'http://localhost:5000/api/movies'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}